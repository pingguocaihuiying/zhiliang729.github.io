shell自动交互的方法

　　src:
http://os.51cto.com/art/200912/167898.htm
　　
　　你了解Linux系统么？你是Linux系统的应用者么？如果你要学习linux，你可能会遇到Linux Shell自动交互问题，这里将介绍Linux Shell自动交互的解决方法，在这里拿出来和大家分享一下。
　　
　　一、背景
　　
　　shell脚本在处理自动循环或大的任务方面可节省大量的时间，通过创建一个处理任务的命令清单，使用变量、条件、算术和循环等方法快速创建脚本以完成相应工作，这比在命令行下一个个敲入命令要省时省力得多。
　　
　　但是有时候我们可能会需要实现和交互程序如ftp,telnet服务器等进行交互的功能，这时候我们需要用到shell的自动交互功能，本文收集了较常用的三种自动交互方法，并进行了比较和总结。
　　
　　二、需求
　　
　　需求1：
　　从一台Linux机器ftp登陆到另一台Linux机器，进行系列操作后关闭，懒得每次都手动输入密码。
　　
　　需求2：
　　改变登录用户密码，懒得每次都输入新旧密码。
　　
　　需求3：
　　希望su自动登录到root账户，懒得每次都输入root密码。
　　
　　三、调试环境
　　
　　终端：SecureCRT
　　
　　系统：WinXP, CentOS 4.4(VmWare)

　　Shell:bash
　　
　　注：shell有很多种，B类SHELL（sh, bash, ksh）之间行为相近；C类SHELL（csh, tcsh）之间行为相近，还有zsh和rc等shell，本文的调试环境是bash。
　　
　　四、自动交互方法一
　　
　　自动交互最关键的就是交互信息的自动输入，首先联想到文件重定向，在shell编程中有这样一种用法(参考Linux与UNIX SHELL编程指南 chapt 5.7)："command << delimiter  从标准输入中读入，直至遇到delimiter分界符。"
　　
　　重定向操作符command << delimiter是一种非常有用的命令，shell将分界符delimiter之后直至下一个同样的分界符之前的所有内容都作为输入，遇到下一个分界符， shell就知道输入结束了。最常见的delimiter分界符是EOF，当然完全可以自定为其他字符。
　　
　　对于需求1 要求的自动登陆ftp，并作系列操作，则可以用这种方法进行自动交互。代码如下：
　　
　　   1. #!/bin/bash  
　　   2. ftp -i -n 192.168.167.187 << EOF 
　　   3. user hzc 123456  
　　   4. pwd  
　　   5. cd test  
　　   6. pwd  
　　   7. close  
　　   8. bye  
　　   9. EOF 
　　
　　测试可以发现，如上代码使用帐号名hzc，密码123456成功登陆了ftp服务器，并进入目录，打印出了pwd。
　　
　　五、自动交互方法二
　　
　　需求2中要求采用非交互的方式改变登录用户密码，尝试用方法1，无法实现。
　　
　　这时候联想到交互信息的另一个自动输入方法，管道，通过echo + sleep + | 可以实现这个需求。
　　
　　   1. #!/bin/bash  
　　   2. (echo "curpassword"  
　　   3. sleep 1  
　　   4. echo "newpassword"   
　　   5. sleep 1  
　　   6. echo "newpassword")|passwd 
　　
　　测试通过，运行这个脚本，直接把当前用户的curpassword改成newpassword。
　　
　　六、自动交互方法三
　　
　　需求3中要求自动登录root账号，尝试方法1和方法2，都出现错误提示standard in must be a tty。
　　
　　这时候尝试寻找外部帮助，一个shell工具expect可以实现这个功能，其实expect就是一个专门用来实现自动交互功能的工具，expect的语法可以参考相关资料，代码如下：
　　
　　   1. #!/usr/bin/expect  
　　   2. spawn su root  
　　   3. expect "password: "  
　　   4. send "123456\r"  
　　   5. expect eof  
　　   6. exit 
　　
　　测试通过，运行这个脚本，直接从当前用户登录到root用户。
　　
　　七、方法总结
　　
　　方法一(重定向)简单直观，也经常有实际应用，但是在自动交互领域功能有限。
　　
　　方法二(管道)也很简单直观，有时甚至不用sleep配合就能展现强大的自动交互实力，但是在某些时候也束手无策。
　　
　　方法三(expect)在功能上是最为强大的，expect本来就是为实现自动交互功能而生，但是缺点是需要安装expect包，在嵌入式等环境下难以安装。
　　
　　三个方法各有优劣，应用的好，都可以完成Linux Shell自动交互。